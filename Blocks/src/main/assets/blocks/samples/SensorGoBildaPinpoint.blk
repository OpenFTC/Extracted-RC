<xml xmlns="https://developers.google.com/blockly/xml">
<variables>
<variable id="vM!B=!a65O5[EQe8-e[6">myPose2D</variable>
</variables>
<block type="procedures_defnoreturn" id="WtpyD@tEu+EoY=P9iY,D" deletable="false" x="25" y="152">
<field name="NAME">runOpMode</field>
<comment pinned="true" h="131" w="550">This OpMode illustrates how to use the GoBildaPinpoint
The OpMode assumes that the sensor is configured with a name of "pinpoint".

See the sensor's product page: https://www.gobilda.com/pinpoint-odometry-computer-imu-sensor-fusion-for-2-wheel-odometry/</comment>
<data>{"commentPositionLeft":-19,"commentPositionTop":-152}</data>
<statement name="STACK">
<block type="comment" id="Lc#BFtj*NTB48YL;eBl.">
<field name="COMMENT">Put initialization blocks here.</field>
<next>
<block type="comment" id=":MYE`jN`owFIT(?1QKYP">
<field name="COMMENT">Configure the sensor.</field>
<next>
<block type="procedures_callnoreturn" id="D7)T/E+J2GuIS#G%HKz!">
<mutation name="configurePinpoint"/>
<next>
<block type="comment" id="=^9`98M*b8qOvKR)@^fn">
<field name="COMMENT">Set the location of the robot - this should be the place you are starting the robot from.</field>
<next>
<block type="goBildaPinpoint_setPosition" id="L[y1DlPuXd}Wz6wL=UW2">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
<value name="POSITION">
<block type="pose2D_create" id="[^lnL9xe@`n_(3.{%cdR">
<value name="DISTANCE_UNIT">
<shadow type="navigation_typedEnum_distanceUnit" id="$FDF%wx^:tn,:Q}I8?1;">
<field name="DISTANCE_UNIT">INCH</field>
</shadow>
</value>
<value name="X">
<shadow type="math_number" id="S{%:8nA}YXsoNTg5J~{1">
<field name="NUM">0</field>
</shadow>
</value>
<value name="Y">
<shadow type="math_number" id="A.M=qsdPcFOovW$O=`,e">
<field name="NUM">0</field>
</shadow>
</value>
<value name="HEADING_UNIT">
<shadow type="navigation_typedEnum_angleUnit" id="?P|n^yvUh+H,k}MUC;7y">
<field name="ANGLE_UNIT">DEGREES</field>
</shadow>
</value>
<value name="HEADING">
<shadow type="math_number" id="iSj|6`XD.pR{Hd%J*x0,">
<field name="NUM">0</field>
</shadow>
</value>
</block>
</value>
<next>
<block type="linearOpMode_waitForStart" id=":`$wN_ci`O;o6P0~.(+g">
<next>
<block type="controls_if" id="}Q?5mbxSO8Di;i!__6[y">
<value name="IF0">
<block type="linearOpMode_opModeIsActive" id=")o%YFX/#9kvv^sgXr4~5"/>
</value>
<statement name="DO0">
<block type="comment" id="(rU-p_T_/B|vExcs}liL">
<field name="COMMENT">Put run blocks here.</field>
<next>
<block type="controls_whileUntil" id="^0Kagy/e+Ea{rbZPv2G6">
<field name="MODE">WHILE</field>
<value name="BOOL">
<block type="linearOpMode_opModeIsActive" id="e)cr{!2VIET83s,JWC.="/>
</value>
<statement name="DO">
<block type="comment" id="Jh/;L$n@JuX8AQJDFCul">
<field name="COMMENT">Put loop blocks here.</field>
<next>
<block type="telemetry_addLine" id="e[:KFveBlwpQM{@j@ZpC">
<value name="TEXT">
<shadow type="text" id="1g*yX1l!_KOKfIYvpS[#">
<field name="TEXT">Push your robot around to see it track</field>
</shadow>
</value>
<next>
<block type="telemetry_addLine" id="Wk#adcC=bRcLkY3QnX:H">
<value name="TEXT">
<shadow type="text" id="K(G={VD{Chx9kyP8%)n^">
<field name="TEXT">Press A to reset the position</field>
</shadow>
</value>
<next>
<block type="controls_if" id="D8Zu,lCf^YEnlAt``l4l">
<value name="IF0">
<block type="gamepad_getProperty_Boolean" id="-rDBg1=grPaX2onDvh#R">
<field name="IDENTIFIER">gamepad1</field>
<field name="PROP">A</field>
<data>{"IDENTIFIER":"gamepad1"}</data>
</block>
</value>
<statement name="DO0">
<block type="comment" id=",*X9{Uy{Ucgrl_FsEQ%Y">
<field name="COMMENT">You could use readings from April Tags here to give a new known position to the pinpoint.</field>
<next>
<block type="goBildaPinpoint_setPosition" id="F4]|.~60IE~$#lG%_kWk">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
<value name="POSITION">
<block type="pose2D_create" id="ZYy`!/tRL[,GYJf4#RK|">
<value name="DISTANCE_UNIT">
<shadow type="navigation_typedEnum_distanceUnit" id="bi~u^B0M,GYhU?LAXRDY">
<field name="DISTANCE_UNIT">INCH</field>
</shadow>
</value>
<value name="X">
<shadow type="math_number" id="nGQstldOlTtZZK2fD5W#">
<field name="NUM">0</field>
</shadow>
</value>
<value name="Y">
<shadow type="math_number" id="MrcXM2u3TY~u3+_AN?xD">
<field name="NUM">0</field>
</shadow>
</value>
<value name="HEADING_UNIT">
<shadow type="navigation_typedEnum_angleUnit" id="DBvlSB[ig5vdu#X}QH,%">
<field name="ANGLE_UNIT">DEGREES</field>
</shadow>
</value>
<value name="HEADING">
<shadow type="math_number" id="VMm%JK%3)fZ+shvr{SA0">
<field name="NUM">0</field>
</shadow>
</value>
</block>
</value>
</block>
</next>
</block>
</statement>
<next>
<block type="goBildaPinpoint_update" id="iv$@Bk,^DYr[(MUwSn~3">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
<next>
<block type="variables_set" id="FO3KHc=6zw1M4|$VN@b+">
<field name="VAR" id="vM!B=!a65O5[EQe8-e[6">myPose2D</field>
<value name="VALUE">
<block type="goBildaPinpoint_getProperty_Pose2D" id="s(NF5]LMyl4h%48aQXR}">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<field name="PROP">Position</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
</block>
</value>
<next>
<block type="telemetry_addNumericData_Number" id="hx.O)halkX6t`J,TF/^G">
<value name="KEY">
<shadow type="text" id="?q#?ESX6Nn!n%goy.jn/">
<field name="TEXT">X coordinate (IN)</field>
</shadow>
</value>
<value name="NUMBER">
<shadow type="math_number" id="5Hr-M5h?*NJeFERPPIl;">
<field name="NUM">123</field>
</shadow>
<block type="pose2D_getPropertyWithDistanceUnit_Number" id="__84+J(ctTr%;oG~6,SU">
<field name="PROP">X</field>
<value name="POSE2D">
<block type="variables_get" id="]D--)y~Y,ZTY75O.[Uf*">
<field name="VAR" id="vM!B=!a65O5[EQe8-e[6">myPose2D</field>
</block>
</value>
<value name="UNIT">
<shadow type="navigation_typedEnum_distanceUnit" id="gWjYt|khbX5|wr0h6`n{">
<field name="DISTANCE_UNIT">INCH</field>
</shadow>
</value>
</block>
</value>
<next>
<block type="telemetry_addNumericData_Number" id="Y{@OaP%jdo_{/3O_v,Qi">
<value name="KEY">
<shadow type="text" id="`g}hK5u1#C]x-AHs(%Yg">
<field name="TEXT">Y coordinate (IN)</field>
</shadow>
</value>
<value name="NUMBER">
<shadow type="math_number" id="$z:{bXxiQ3?*@H,Bxq;y">
<field name="NUM">123</field>
</shadow>
<block type="pose2D_getPropertyWithDistanceUnit_Number" id=":DFl/eXh!.S)ilwUhX#/">
<field name="PROP">Y</field>
<value name="POSE2D">
<block type="variables_get" id="Zr[g$,v/r-8F8]0UMQ{z">
<field name="VAR" id="vM!B=!a65O5[EQe8-e[6">myPose2D</field>
</block>
</value>
<value name="UNIT">
<shadow type="navigation_typedEnum_distanceUnit" id="A!iClKiUbEzCFeK`Vg/7">
<field name="DISTANCE_UNIT">INCH</field>
</shadow>
</value>
</block>
</value>
<next>
<block type="telemetry_addNumericData_Number" id=":wD},Wp$ekgqQzLqC%Mh">
<value name="KEY">
<shadow type="text" id="|-O?Qifi,{Y(;[u(n.X#">
<field name="TEXT">Heading angle (DEGREES)</field>
</shadow>
</value>
<value name="NUMBER">
<shadow type="math_number" id="g#w~1G!#Zo)_={T2VJQT">
<field name="NUM">123</field>
</shadow>
<block type="pose2D_getPropertyWithAngleUnit_Number" id="ml0Y;p4O!yO~1O=BXn,H">
<field name="PROP">Heading</field>
<value name="POSE2D">
<block type="variables_get" id="OP*,IZQesV#lF6H7)7yn">
<field name="VAR" id="vM!B=!a65O5[EQe8-e[6">myPose2D</field>
</block>
</value>
<value name="UNIT">
<shadow type="navigation_typedEnum_angleUnit" id="*p(fa}gdr}1[M4_(+S6/">
<field name="ANGLE_UNIT">DEGREES</field>
</shadow>
</value>
</block>
</value>
<next>
<block type="telemetry_update" id="exvivmft-pX$n!1,8Ea$"/>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</statement>
</block>
</next>
</block>
</statement>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</statement>
</block>
<block type="procedures_defnoreturn" id="H6)Wzg9H3MJ$7ka$zI0;" x="25" y="1565">
<field name="NAME">configurePinpoint</field>
<comment pinned="true" h="49" w="171">Configure the sensor.</comment>
<data>{"commentPositionLeft":-45,"commentPositionTop":-74}</data>
<statement name="STACK">
<block type="comment" id="Oem)nDH${u`/NB^-HWFt">
<field name="COMMENT">Set the odometry pod positions relative to the point that you want the position to be measured from.</field>
<next>
<block type="comment" id="G]PHBC6[tROZw#Xp?S}i">
<field name="COMMENT"/>
<next>
<block type="comment" id="cudv]$^G!at%|J9itITg">
<field name="COMMENT">The X pod offset refers to how far sideways from the tracking point the X (forward) odometry pod is.</field>
<next>
<block type="comment" id="xPeHrNwdIAahpxw(N:io">
<field name="COMMENT">Left of the center is a positive number, right of center is a negative number.</field>
<next>
<block type="comment" id="!|m2CH@V]{g(Z)(cjyQ?">
<field name="COMMENT"/>
<next>
<block type="comment" id="|UNougrHq=q1-+J.|%^Z">
<field name="COMMENT">The Y pod offset refers to how far forwards from the tracking point the Y (strafe) odometry pod is.</field>
<next>
<block type="comment" id="YJ;W}OTC8vA%kd?*rzzn">
<field name="COMMENT">Forward of center is a positive number, backwards is a negative number.</field>
<next>
<block type="goBildaPinpoint_setOffsets" id="%lKx]kDE-?onv42IBl{@">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<comment pinned="false" h="71" w="314">These value are tuned for 3110-0002-0001 Product Insight #1.</comment>
<data>{"IDENTIFIER":"pinpoint","commentPositionLeft":-21,"commentPositionTop":-105}</data>
<value name="X_OFFSET">
<shadow type="math_number" id="wbk8^5IcvpDk-?,tr_(u">
<field name="NUM">-84</field>
</shadow>
</value>
<value name="Y_OFFSET">
<shadow type="math_number" id="[5YOF)NTqZycF,9+O_N@">
<field name="NUM">-168</field>
</shadow>
</value>
<value name="DISTANCE_UNIT">
<shadow type="navigation_typedEnum_distanceUnit" id="w$w,b[RwwR%f_r)wS^u9">
<field name="DISTANCE_UNIT">MM</field>
</shadow>
</value>
<next>
<block type="comment" id="F;n,dwprH^5}V.d(iDX[">
<field name="COMMENT">Set the kind of pods used by your robot. If you're using goBILDA odometry pods, select either</field>
<next>
<block type="comment" id="8{3`tgC6*yWF`~}6E??4">
<field name="COMMENT">the goBILDA_SWINGARM_POD, or the goBILDA_4_BAR_POD.</field>
<next>
<block type="comment" id="WBC$i(YAbX*oz5$e?^2s">
<field name="COMMENT">If you're using another kind of odometry pod, use the second setEncoderResolution and input the</field>
<next>
<block type="comment" id="{N*UTq(ANq.OqOYR=$T6">
<field name="COMMENT">number of ticks per unit of your odometry pod.</field>
<next>
<block type="goBildaPinpoint_setEncoderResolution_withPods" id="Bp}G.A2#:}/_^]HFTJLm">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
<value name="PODS">
<shadow type="goBildaPinpoint_typedEnum_goBildaOdometryPods" id="rn7Y_QOo(Pxn~19QpT?]">
<field name="ODOMETRY_PODS">goBILDA_4_BAR_POD</field>
</shadow>
</value>
<next>
<block type="goBildaPinpoint_setEncoderResolution_withTicks" id="66i$/(.S;q.2NS_o|}Nj" disabled="true">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
<value name="TICKS_PER_UNIT">
<shadow type="math_number" id="eO3jlE_#Y:NC}Jj]L44o">
<field name="NUM">13.26291192</field>
</shadow>
</value>
<value name="DISTANCE_UNIT">
<shadow type="navigation_typedEnum_distanceUnit" id="FD[.M^pl5IDq{%l-9!MW">
<field name="DISTANCE_UNIT">MM</field>
</shadow>
</value>
<next>
<block type="comment" id="6e}mkoVEIX*b+E}:N8nu">
<field name="COMMENT">Set the direction that each of the two odometry pods count. The X (forward) pod should</field>
<next>
<block type="comment" id="Ia{t#5oMvW6C]_x;e4xs">
<field name="COMMENT">increase when you move the robot forward. And the Y (strafe) pod should increase when</field>
<next>
<block type="comment" id="?I~RA*-C_ou_;)Am$^zS">
<field name="COMMENT">you move the robot to the left.</field>
<next>
<block type="goBildaPinpoint_setEncoderDirections" id="Qs;,T2?Ya,5BhyO~e3u=">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
<value name="X_ENCODER">
<shadow type="goBildaPinpoint_typedEnum_encoderDirection" id="Ek#5;EI_ocW~{t%/+sy]">
<field name="ENCODER_DIRECTION">FORWARD</field>
</shadow>
</value>
<value name="Y_ENCODER">
<shadow type="goBildaPinpoint_typedEnum_encoderDirection" id="uBv2pV}=T!*,?}lWfZ`H">
<field name="ENCODER_DIRECTION">FORWARD</field>
</shadow>
</value>
<next>
<block type="comment" id="[(*)Bk~ZT[]eRuh2RJ^`">
<field name="COMMENT">Before running the robot, recalibrate the IMU. This needs to happen when the robot is stationary</field>
<next>
<block type="comment" id="l(%ME]gShI1cBOZ{W$Tx">
<field name="COMMENT">The IMU will automatically calibrate when first powered on, but recalibrating before running</field>
<next>
<block type="comment" id="R.iYFnZ6stoQOQuf*.Gg">
<field name="COMMENT">the robot is a good idea to ensure that the calibration is "good".</field>
<next>
<block type="comment" id="m%SD(I`(YTIEb52c7~hN">
<field name="COMMENT">resetPosAndIMU will reset the position to 0,0,0 and also recalibrate the IMU.</field>
<next>
<block type="comment" id="?Kui+_fi_A$yYR^$GkA+">
<field name="COMMENT">This is recommended before you run your autonomous, as a bad initial calibration can cause</field>
<next>
<block type="comment" id="m?A3G$FD9(UMpLi1+4@[">
<field name="COMMENT">an incorrect starting value for x, y, and heading.</field>
<next>
<block type="goBildaPinpoint_resetPosAndIMU" id="o)_wmSBbkadOreVr3gAG">
<field name="IDENTIFIER">pinpointAsGoBildaPinpoint</field>
<data>{"IDENTIFIER":"pinpoint"}</data>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</statement>
</block>
</xml>
<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<Extra>
<OpModeMeta flavor="TELEOP" group="" autoTransition="" />
<Enabled value="true" />
</Extra>

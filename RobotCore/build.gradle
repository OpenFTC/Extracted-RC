import java.text.SimpleDateFormat

apply plugin: 'com.android.library'

def versionNumbers = new Properties()
file("versionNumbers.properties").withInputStream { versionNumbers.load(it) }

android.buildFeatures.buildConfig true

android {

    namespace 'com.qualcomm.robotcore'

    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 110
        versionName "22.1"

        renderscriptTargetApi 28
        renderscriptSupportModeEnabled true
        renderscriptNdkModeEnabled false
        buildConfigField "int", "RS_TARGET_API", "28"

        buildConfigField "String", "SDK_BUILD_TIME", '"' + (new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ", Locale.ROOT).format(new Date())) + '"'
        buildConfigField "int", "SDK_MAJOR_VERSION", versionNumbers.getProperty("MAJOR_VERSION")
        buildConfigField "int", "SDK_MINOR_VERSION", versionNumbers.getProperty("MINOR_VERSION")
        buildConfigField "int", "SDK_POINT_VERSION", versionNumbers.getProperty("POINT_VERSION")

        externalNativeBuild {
            cmake {
                cppFlags "-Wno-invalid-offsetof" // all our uses of offsetof() are in fact ok. disable overzealous warning
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            ndk {
                abiFilters "armeabi-v7a"
            }
            externalNativeBuild {
                cmake {
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk {
                abiFilters "armeabi-v7a"
            }
            externalNativeBuild {
                cmake {
                }
            }
        }
    }

    // Encapsulates your external native build configurations.
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    ndkVersion '21.3.6528147'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    /*
     * We use 'api' so that modules that depend on us will implicitly
     * inherit these dependencies as well
     */
    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    api 'com.google.code.gson:gson:2.8.0'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.jakewharton.threetenabp:threetenabp:1.3.1'
}
